GNU gdb (GDB) 7.6.1
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "mingw32".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from C:\Users\hp\Desktop\PSC\c-activity-sets\set03\problem08.exe...done.
(gdb) b main
Breakpoint 1 at 0x40163e: file problem08.c, line 75.
(gdb) r
Starting program: C:\Users\hp\Desktop\PSC\c-activity-sets\set03/./problem08.exe 
[New Thread 16668.0x2a48]
[New Thread 16668.0x420c]

Breakpoint 1, main () at problem08.c:75
75          input_polygon(&poly);
(gdb) n
Enter the number of sides of the polygon: 4
Enter the coordinates of the vertices:
Vertex 1 (x y): 5
6
Vertex 2 (x y): 4
5
Vertex 3 (x y): 3
4
Vertex 4 (x y): 6
5
76          find_perimeter(&poly);
(gdb) s
find_perimeter (p=0x60fbc8) at problem08.c:54
54          p->perimeter = 0.0;
(gdb) n
55          for (int i = 0; i < p->sides; i++) 
(gdb) n
57              int next = (i + 1) % p->sides;
(gdb) n
58              p->perimeter += find_distance(p->p[i], p->p[next]);
(gdb) n
55          for (int i = 0; i < p->sides; i++) 
(gdb) n
57              int next = (i + 1) % p->sides;
(gdb) n
58              p->perimeter += find_distance(p->p[i], p->p[next]);
(gdb) n
55          for (int i = 0; i < p->sides; i++) 
(gdb) n
57              int next = (i + 1) % p->sides;
(gdb) s
58              p->perimeter += find_distance(p->p[i], p->p[next]);
(gdb) s
find_distance (a=..., b=...) at problem08.c:49
49          return sqrt(pow(b.x - a.x, 2) + pow(b.y - a.y, 2));
(gdb) n
50      }
(gdb) n
find_perimeter (p=0x60fbc8) at problem08.c:55
55          for (int i = 0; i < p->sides; i++)
(gdb) n
57              int next = (i + 1) % p->sides;
(gdb) n
58              p->perimeter += find_distance(p->p[i], p->p[next]);
(gdb) n
55          for (int i = 0; i < p->sides; i++) 
(gdb) n
60      }
(gdb) n
main () at problem08.c:77
77          output(poly);
(gdb) n
Polygon with 4 sides:
Vertex 1: (5.00, 6.00)
Vertex 2: (4.00, 5.00)
Vertex 3: (3.00, 4.00)
Vertex 4: (6.00, 5.00)
Perimeter: 7.40
78          return 0;
(gdb) n
79      }(gdb) n
0x004010fd in __mingw_CRTStartup ()
(gdb) n
Single stepping until exit from function __mingw_CRTStartup,
which has no line number information.
[Inferior 1 (process 16668) exited normally]
(gdb) q